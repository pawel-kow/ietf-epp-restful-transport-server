from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class EppDcpAccessTypeOneOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _none=False):  # noqa: E501
        """EppDcpAccessTypeOneOf1 - a model defined in OpenAPI

        :param _none: The _none of this EppDcpAccessTypeOneOf1.  # noqa: E501
        :type _none: bool
        """
        self.openapi_types = {
            '_none': bool
        }

        self.attribute_map = {
            '_none': 'none'
        }

        self.__none = _none

    @classmethod
    def from_dict(cls, dikt) -> 'EppDcpAccessTypeOneOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_dcpAccessType_oneOf_1 of this EppDcpAccessTypeOneOf1.  # noqa: E501
        :rtype: EppDcpAccessTypeOneOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _none(self) -> bool:
        """Gets the _none of this EppDcpAccessTypeOneOf1.


        :return: The _none of this EppDcpAccessTypeOneOf1.
        :rtype: bool
        """
        return self.__none

    @_none.setter
    def _none(self, _none: bool):
        """Sets the _none of this EppDcpAccessTypeOneOf1.


        :param _none: The _none of this EppDcpAccessTypeOneOf1.
        :type _none: bool
        """
        if _none is None:
            raise ValueError("Invalid value for `_none`, must not be `None`")  # noqa: E501

        self.__none = _none
