from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainRenDataType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ex_date=None, name=None):  # noqa: E501
        """DomainRenDataType - a model defined in OpenAPI

        :param ex_date: The ex_date of this DomainRenDataType.  # noqa: E501
        :type ex_date: datetime
        :param name: The name of this DomainRenDataType.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {
            'ex_date': datetime,
            'name': str
        }

        self.attribute_map = {
            'ex_date': 'exDate',
            'name': 'name'
        }

        self._ex_date = ex_date
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'DomainRenDataType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The domain_renDataType of this DomainRenDataType.  # noqa: E501
        :rtype: DomainRenDataType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ex_date(self) -> datetime:
        """Gets the ex_date of this DomainRenDataType.


        :return: The ex_date of this DomainRenDataType.
        :rtype: datetime
        """
        return self._ex_date

    @ex_date.setter
    def ex_date(self, ex_date: datetime):
        """Sets the ex_date of this DomainRenDataType.


        :param ex_date: The ex_date of this DomainRenDataType.
        :type ex_date: datetime
        """

        self._ex_date = ex_date

    @property
    def name(self) -> str:
        """Gets the name of this DomainRenDataType.


        :return: The name of this DomainRenDataType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this DomainRenDataType.


        :param name: The name of this DomainRenDataType.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")  # noqa: E501
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")  # noqa: E501

        self._name = name
