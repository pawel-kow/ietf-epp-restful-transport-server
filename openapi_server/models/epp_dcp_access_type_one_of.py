from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class EppDcpAccessTypeOneOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all=False):  # noqa: E501
        """EppDcpAccessTypeOneOf - a model defined in OpenAPI

        :param all: The all of this EppDcpAccessTypeOneOf.  # noqa: E501
        :type all: bool
        """
        self.openapi_types = {
            'all': bool
        }

        self.attribute_map = {
            'all': 'all'
        }

        self._all = all

    @classmethod
    def from_dict(cls, dikt) -> 'EppDcpAccessTypeOneOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_dcpAccessType_oneOf of this EppDcpAccessTypeOneOf.  # noqa: E501
        :rtype: EppDcpAccessTypeOneOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all(self) -> bool:
        """Gets the all of this EppDcpAccessTypeOneOf.


        :return: The all of this EppDcpAccessTypeOneOf.
        :rtype: bool
        """
        return self._all

    @all.setter
    def all(self, all: bool):
        """Sets the all of this EppDcpAccessTypeOneOf.


        :param all: The all of this EppDcpAccessTypeOneOf.
        :type all: bool
        """
        if all is None:
            raise ValueError("Invalid value for `all`, must not be `None`")  # noqa: E501

        self._all = all
