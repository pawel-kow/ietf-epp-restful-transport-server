from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class EppDcpAccessTypeOneOf2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, other=False):  # noqa: E501
        """EppDcpAccessTypeOneOf2 - a model defined in OpenAPI

        :param other: The other of this EppDcpAccessTypeOneOf2.  # noqa: E501
        :type other: bool
        """
        self.openapi_types = {
            'other': bool
        }

        self.attribute_map = {
            'other': 'other'
        }

        self._other = other

    @classmethod
    def from_dict(cls, dikt) -> 'EppDcpAccessTypeOneOf2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_dcpAccessType_oneOf_2 of this EppDcpAccessTypeOneOf2.  # noqa: E501
        :rtype: EppDcpAccessTypeOneOf2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def other(self) -> bool:
        """Gets the other of this EppDcpAccessTypeOneOf2.


        :return: The other of this EppDcpAccessTypeOneOf2.
        :rtype: bool
        """
        return self._other

    @other.setter
    def other(self, other: bool):
        """Sets the other of this EppDcpAccessTypeOneOf2.


        :param other: The other of this EppDcpAccessTypeOneOf2.
        :type other: bool
        """
        if other is None:
            raise ValueError("Invalid value for `other`, must not be `None`")  # noqa: E501

        self._other = other
