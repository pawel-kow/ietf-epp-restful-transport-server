from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class SecDNSChgType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_sig_life=None):  # noqa: E501
        """SecDNSChgType - a model defined in OpenAPI

        :param max_sig_life: The max_sig_life of this SecDNSChgType.  # noqa: E501
        :type max_sig_life: int
        """
        self.openapi_types = {
            'max_sig_life': int
        }

        self.attribute_map = {
            'max_sig_life': 'maxSigLife'
        }

        self._max_sig_life = max_sig_life

    @classmethod
    def from_dict(cls, dikt) -> 'SecDNSChgType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The secDNS_chgType of this SecDNSChgType.  # noqa: E501
        :rtype: SecDNSChgType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_sig_life(self) -> int:
        """Gets the max_sig_life of this SecDNSChgType.


        :return: The max_sig_life of this SecDNSChgType.
        :rtype: int
        """
        return self._max_sig_life

    @max_sig_life.setter
    def max_sig_life(self, max_sig_life: int):
        """Sets the max_sig_life of this SecDNSChgType.


        :param max_sig_life: The max_sig_life of this SecDNSChgType.
        :type max_sig_life: int
        """
        if max_sig_life is not None and max_sig_life > 2147483647:  # noqa: E501
            raise ValueError("Invalid value for `max_sig_life`, must be a value less than or equal to `2147483647`")  # noqa: E501
        if max_sig_life is not None and max_sig_life < 1:  # noqa: E501
            raise ValueError("Invalid value for `max_sig_life`, must be a value greater than or equal to `1`")  # noqa: E501

        self._max_sig_life = max_sig_life
