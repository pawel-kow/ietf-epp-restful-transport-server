from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.epp_response_type import EppResponseType
from openapi_server import util

from openapi_server.models.epp_response_type import EppResponseType  # noqa: E501

class EppEppTypeOneOf3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, response=None):  # noqa: E501
        """EppEppTypeOneOf3 - a model defined in OpenAPI

        :param response: The response of this EppEppTypeOneOf3.  # noqa: E501
        :type response: EppResponseType
        """
        self.openapi_types = {
            'response': EppResponseType
        }

        self.attribute_map = {
            'response': 'response'
        }

        self._response = response

    @classmethod
    def from_dict(cls, dikt) -> 'EppEppTypeOneOf3':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_eppType_oneOf_3 of this EppEppTypeOneOf3.  # noqa: E501
        :rtype: EppEppTypeOneOf3
        """
        return util.deserialize_model(dikt, cls)

    @property
    def response(self) -> EppResponseType:
        """Gets the response of this EppEppTypeOneOf3.


        :return: The response of this EppEppTypeOneOf3.
        :rtype: EppResponseType
        """
        return self._response

    @response.setter
    def response(self, response: EppResponseType):
        """Sets the response of this EppEppTypeOneOf3.


        :param response: The response of this EppEppTypeOneOf3.
        :type response: EppResponseType
        """
        if response is None:
            raise ValueError("Invalid value for `response`, must not be `None`")  # noqa: E501

        self._response = response
