from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.domain_auth_info_type import DomainAuthInfoType
from openapi_server.models.domain_info_name_type import DomainInfoNameType
from openapi_server import util

from openapi_server.models.domain_auth_info_type import DomainAuthInfoType  # noqa: E501
from openapi_server.models.domain_info_name_type import DomainInfoNameType  # noqa: E501

class DomainInfoType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_info=None, name=None):  # noqa: E501
        """DomainInfoType - a model defined in OpenAPI

        :param auth_info: The auth_info of this DomainInfoType.  # noqa: E501
        :type auth_info: DomainAuthInfoType
        :param name: The name of this DomainInfoType.  # noqa: E501
        :type name: DomainInfoNameType
        """
        self.openapi_types = {
            'auth_info': DomainAuthInfoType,
            'name': DomainInfoNameType
        }

        self.attribute_map = {
            'auth_info': 'authInfo',
            'name': 'name'
        }

        self._auth_info = auth_info
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'DomainInfoType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The domain_infoType of this DomainInfoType.  # noqa: E501
        :rtype: DomainInfoType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_info(self) -> DomainAuthInfoType:
        """Gets the auth_info of this DomainInfoType.


        :return: The auth_info of this DomainInfoType.
        :rtype: DomainAuthInfoType
        """
        return self._auth_info

    @auth_info.setter
    def auth_info(self, auth_info: DomainAuthInfoType):
        """Sets the auth_info of this DomainInfoType.


        :param auth_info: The auth_info of this DomainInfoType.
        :type auth_info: DomainAuthInfoType
        """

        self._auth_info = auth_info

    @property
    def name(self) -> DomainInfoNameType:
        """Gets the name of this DomainInfoType.


        :return: The name of this DomainInfoType.
        :rtype: DomainInfoNameType
        """
        return self._name

    @name.setter
    def name(self, name: DomainInfoNameType):
        """Sets the name of this DomainInfoType.


        :param name: The name of this DomainInfoType.
        :type name: DomainInfoNameType
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name
