from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.domain_auth_info_chg_type import DomainAuthInfoChgType
from openapi_server import util

from openapi_server.models.domain_auth_info_chg_type import DomainAuthInfoChgType  # noqa: E501

class DomainChgType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_info=None, registrant=None):  # noqa: E501
        """DomainChgType - a model defined in OpenAPI

        :param auth_info: The auth_info of this DomainChgType.  # noqa: E501
        :type auth_info: DomainAuthInfoChgType
        :param registrant: The registrant of this DomainChgType.  # noqa: E501
        :type registrant: str
        """
        self.openapi_types = {
            'auth_info': DomainAuthInfoChgType,
            'registrant': str
        }

        self.attribute_map = {
            'auth_info': 'authInfo',
            'registrant': 'registrant'
        }

        self._auth_info = auth_info
        self._registrant = registrant

    @classmethod
    def from_dict(cls, dikt) -> 'DomainChgType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The domain_chgType of this DomainChgType.  # noqa: E501
        :rtype: DomainChgType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_info(self) -> DomainAuthInfoChgType:
        """Gets the auth_info of this DomainChgType.


        :return: The auth_info of this DomainChgType.
        :rtype: DomainAuthInfoChgType
        """
        return self._auth_info

    @auth_info.setter
    def auth_info(self, auth_info: DomainAuthInfoChgType):
        """Sets the auth_info of this DomainChgType.


        :param auth_info: The auth_info of this DomainChgType.
        :type auth_info: DomainAuthInfoChgType
        """

        self._auth_info = auth_info

    @property
    def registrant(self) -> str:
        """Gets the registrant of this DomainChgType.


        :return: The registrant of this DomainChgType.
        :rtype: str
        """
        return self._registrant

    @registrant.setter
    def registrant(self, registrant: str):
        """Sets the registrant of this DomainChgType.


        :param registrant: The registrant of this DomainChgType.
        :type registrant: str
        """
        if registrant is not None and len(registrant) > 16:
            raise ValueError("Invalid value for `registrant`, length must be less than or equal to `16`")  # noqa: E501
        if registrant is not None and len(registrant) < 0:
            raise ValueError("Invalid value for `registrant`, length must be greater than or equal to `0`")  # noqa: E501

        self._registrant = registrant
