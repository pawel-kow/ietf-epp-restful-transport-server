from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class EppEppTypeOneOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hello=False):  # noqa: E501
        """EppEppTypeOneOf1 - a model defined in OpenAPI

        :param hello: The hello of this EppEppTypeOneOf1.  # noqa: E501
        :type hello: bool
        """
        self.openapi_types = {
            'hello': bool
        }

        self.attribute_map = {
            'hello': 'hello'
        }

        self._hello = hello

    @classmethod
    def from_dict(cls, dikt) -> 'EppEppTypeOneOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_eppType_oneOf_1 of this EppEppTypeOneOf1.  # noqa: E501
        :rtype: EppEppTypeOneOf1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hello(self) -> bool:
        """Gets the hello of this EppEppTypeOneOf1.


        :return: The hello of this EppEppTypeOneOf1.
        :rtype: bool
        """
        return self._hello

    @hello.setter
    def hello(self, hello: bool):
        """Sets the hello of this EppEppTypeOneOf1.


        :param hello: The hello of this EppEppTypeOneOf1.
        :type hello: bool
        """
        if hello is None:
            raise ValueError("Invalid value for `hello`, must not be `None`")  # noqa: E501

        self._hello = hello
