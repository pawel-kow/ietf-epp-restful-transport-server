from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class EppMixedMsgType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text=None, lang=None):  # noqa: E501
        """EppMixedMsgType - a model defined in OpenAPI

        :param text: The text of this EppMixedMsgType.  # noqa: E501
        :type text: List[str]
        :param lang: The lang of this EppMixedMsgType.  # noqa: E501
        :type lang: str
        """
        self.openapi_types = {
            'text': List[str],
            'lang': str
        }

        self.attribute_map = {
            'text': '#text',
            'lang': '@lang'
        }

        self._text = text
        self._lang = lang

    @classmethod
    def from_dict(cls, dikt) -> 'EppMixedMsgType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The epp_mixedMsgType of this EppMixedMsgType.  # noqa: E501
        :rtype: EppMixedMsgType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text(self) -> List[str]:
        """Gets the text of this EppMixedMsgType.


        :return: The text of this EppMixedMsgType.
        :rtype: List[str]
        """
        return self._text

    @text.setter
    def text(self, text: List[str]):
        """Sets the text of this EppMixedMsgType.


        :param text: The text of this EppMixedMsgType.
        :type text: List[str]
        """

        self._text = text

    @property
    def lang(self) -> str:
        """Gets the lang of this EppMixedMsgType.


        :return: The lang of this EppMixedMsgType.
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang: str):
        """Sets the lang of this EppMixedMsgType.


        :param lang: The lang of this EppMixedMsgType.
        :type lang: str
        """

        self._lang = lang
